class Office:  # определение класса кабинет
    def __init__(self, ZavOffice, square):  # создание конструктора с полями
        
        self.ZavOffice = self.__validate_zavoffice(ZavOffice) # Валидация: присваиваем атрибуту ZavOffice результат валидации введенного ФИО
        self.square = self.__validate_square(square) #Валидация: присваиваем атрибуту square результат валидации введенной площади

    def get_ZavOffice(self): #метод для зав
        """
        Возвращает ФИО заведующего в формате "Фамилия И.О.".
        """
        parts = self.ZavOffice.split() # Разделяем ФИО на части, используя пробел в качестве разделителя. Результат - список строк.
        if len(parts) >= 3: # Если в списке как минимум 3 элемента (фамилия, имя, отчество)
            return f"{parts[0]} {parts[1][0]}.{parts[2][0]}." # Форматируем как "Фамилия И.О." (первый элемент - фамилия, берем первый символ имени и отчества)
        elif len(parts) == 2: # Если в списке 2 элемента (фамилия, имя)
            return f"{parts[0]} {parts[1][0]}."  # Форматируем как "Фамилия И."
        else:
            return self.ZavOffice # Возвращаем исходное ФИО, если оно не соответствует формату

    
    def set_ZavOffice(self, ZavOffice): #метод для устанавливает заведующего кабинета
        """
        Устанавливает ФИО заведующего.
        """
        self.ZavOffice = self.__validate_zavoffice(ZavOffice) # Валидация: присваиваем атрибуту ZavOffice результат валидации введенного ФИО

    def get_square(self): #метод для площади
        """
        Возвращает площадь кабинета с указанием единицы измерения.
        """
        return f"{self.square} кв.м" #возвращает площадь кв.м (конкатенация числа и строки)

    def set_square(self, square): #метод для устанавливает площадь кабинета
        """
        Устанавливает площадь кабинета.
        """
        self.square = self.__validate_square(square) # Валидация: присваиваем атрибуту square результат валидации введенной площади

    def __validate_zavoffice(self, ZavOffice):
        """
        Приватный метод для валидации ФИО заведующего.
        """
        if not isinstance(ZavOffice, str): # Проверяем, является ли ZavOffice строкой
            raise TypeError("ФИО должно быть строкой") # Если не строка, вызываем исключение TypeError

        return ZavOffice # Если строка, возвращаем введенное значение

    def __validate_square(self, square):
        """
        Приватный метод для валидации площади кабинета.
        """
        if not isinstance(square, (int, float)): # Проверяем, является ли square целым числом или числом с плавающей точкой
            raise TypeError("Площадь должна быть числом") # Если не число, вызываем исключение TypeError
        if not 10 <= square <= 100: # Проверяем, находится ли square в диапазоне от 10 до 100
            raise ValueError("Площадь должна быть от 10 до 100") # Если не в диапазоне, вызываем исключение ValueError
        return square # Если все проверки пройдены, возвращаем введенное значение


#вывод свойств
office1 = Office("Иванов Иван Иванович", 40) #создание экземпляра класса Office с ФИО и площадью
print("Кабинет 1:")
print("Заведующий первого кабинета:", office1.get_ZavOffice()) #вывод ФИО заведующего, отформатированного в методе get_ZavOffice()
print("Площадь первого кабинета:", office1.get_square()) #вывод площади кабинета

office2 = Office("Петров Петр Петрович", 67) #создание экземпляра класса Office с ФИО и площадью
print("\nКабинет 2:")
print("Заведующий второго кабинета:", office2.get_ZavOffice()) #вывод ФИО заведующего, отформатированного в методе get_ZavOffice()
print("Площадь второго кабинета:", office2.get_square()) #вывод площади кабинета
#изменения значений:
office1.set_square(50) #изменение площади первого кабинета
print("Новая площадь:", office1.get_square()) #вывод измененной площади

office3 = Office(123, 50) # TypeError: ФИО должно быть строкой - попытка создания экземпляра с неверным типом данных для ФИО
office4 = Office("Сидоров Сидор Сидорович", "abc") # TypeError: Площадь должна быть числом - попытка создания экземпляра с неверным типом данных для площади
office5 = Office("Смирнов Смирн Смирнов", 5) # ValueError: Площадь должна быть от 10 до 100 - попытка создания экземпляра с площадью вне допустимого диапазона



